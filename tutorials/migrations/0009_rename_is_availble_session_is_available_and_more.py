# Generated by Django 5.1.2 on 2024-11-28 20:04

import datetime
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


def get_default_start_day():
    return datetime.date(2024, 11, 11)


def get_default_end_day():
    return datetime.date(2024, 11, 11)


class Migration(migrations.Migration):

    dependencies = [
        ('tutorials', '0008_remove_admin_admin_level_session_is_availble_and_more'),
    ]

    operations = [
        # Rename 'is_availble' to 'is_available'
        migrations.RenameField(
            model_name='session',
            old_name='is_availble',
            new_name='is_available',
        ),
        
        # Remove unused fields from the 'session' model
        migrations.RemoveField(
            model_name='session',
            name='end_time',
        ),
        migrations.RemoveField(
            model_name='session',
            name='start_time',
        ),
        migrations.RemoveField(
            model_name='session',
            name='tutor',
        ),
        
        # Add new fields to the 'session' model
        migrations.AddField(
            model_name='session',
            name='duration_hours',
            field=models.PositiveIntegerField(
                default=2,
                help_text='Duration of each session in hours (1-2 hours).',
                validators=[django.core.validators.MinValueValidator(1)]
            ),
        ),
        migrations.AddField(
            model_name='session',
            name='end_day',
            field=models.DateField(
                default=get_default_end_day,
                help_text='End date of the session term.',
            ),
        ),
        migrations.AddField(
            model_name='session',
            name='start_day',
            field=models.DateField(
                default=get_default_start_day,
                help_text='Start date of the session term.',
            ),
            preserve_default=False,
        ),
        
        # Alter field in 'session' model
        migrations.AlterField(
            model_name='session',
            name='year',
            field=models.PositiveIntegerField(
                help_text='Enter the year (e.g., 2024)',
                validators=[django.core.validators.MinValueValidator(2024)]
            ),
        ),
        
        # Create new 'TutorSession' model
        migrations.CreateModel(
            name='TutorSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('session', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='tutor_sessions',
                    to='tutorials.session'
                )),
                ('tutor', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='tutor_sessions',
                    to='tutorials.tutor'
                )),
            ],
        ),
        
        # Remove unique constraints on 'StudentSession'
        migrations.AlterUniqueTogether(
            name='studentsession',
            unique_together=set(),
        ),
        
        # Add new field to 'RequestedStudentSession'
        migrations.AddField(
            model_name='requestedstudentsession',
            name='available_tutor_sessions',
            field=models.ManyToManyField(
                blank=True,
                related_name='requested_sessions',
                to='tutorials.tutorsession'
            ),
        ),
        
        # Update 'StudentSession' to reference 'TutorSession' instead of 'Session'
        migrations.AddField(
            model_name='studentsession',
            name='tutor_session',
            field=models.ForeignKey(
                default=None,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='student_sessions',
                to='tutorials.tutorsession',
            ),
            preserve_default=False,
        ),
        
        # Reapply unique constraints to 'StudentSession'
        migrations.AlterUniqueTogether(
            name='studentsession',
            unique_together={('student', 'tutor_session')},
        ),
        
        # Remove old reference to 'Session' in 'StudentSession'
        migrations.RemoveField(
            model_name='studentsession',
            name='session',
        ),
    ]
